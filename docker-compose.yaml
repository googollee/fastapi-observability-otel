x-logging: &default-logging
  driver: fluentd
  options:
    fluentd-address: localhost:8006

version: "3.4"

services:
  otelcol:
    image: otel/opentelemetry-collector-contrib:0.91.0
    ports:
      - "8006:8006"
      - "8006:8006/udp"
    depends_on:
      - loki
      - prometheus
      - tempo
    volumes:
      - ./etc/otelcol.yaml:/etc/otelcol-contrib/config.yaml
      - ./output:/output
      - /var/run/docker.sock:/var/run/docker.sock

  app-a:
    build: ./fastapi_app/
    ports:
      - "8000:8000"
    depends_on:
      - otelcol
    environment:
      APP_NAME: "app-a"
    logging: *default-logging

  app-b:
    build: ./fastapi_app/
    ports:
      - "8001:8000"
    depends_on:
      - otelcol
    environment:
      APP_NAME: "app-b"
    logging: *default-logging

  app-c:
    build: ./fastapi_app_plain/
    ports:
      - "8002:8000"
    depends_on:
      - otelcol
    environment:
      APP_NAME: "app-c"
      OTEL_PYTHON_LOG_CORRELATION: "true"
      OTEL_TRACES_EXPORTER: "otlp"
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://tempo:4317"
      OTEL_METRICS_EXPORTER: "none"
      OTEL_SERVICE_NAME: "app-c"
      OTEL_RESOURCE_ATTRIBUTES: "compose_service=app-c"
    command: "opentelemetry-instrument python main.py"
    logging: *default-logging

  loki:
    image: grafana/loki:2.8.7
    command: -config.file=/etc/loki/local-config.yaml

  prometheus:
    image: prom/prometheus:v2.48.1
    volumes:
      - ./etc/prometheus:/workspace
    command:
      - --config.file=/workspace/prometheus.yml
      - --enable-feature=exemplar-storage

  tempo:
    image: grafana/tempo:2.3.1
    command: [ "--target=all", "--storage.trace.backend=local", "--storage.trace.local.path=/var/tempo", "--auth.enabled=false" ]

  grafana:
    image: grafana/grafana:10.2.2
    ports:
      - "3000:3000"
    volumes:
      - ./etc/grafana/:/etc/grafana/provisioning/datasources
      - ./etc/dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
      - ./etc/dashboards:/etc/grafana/dashboards
    depends_on:
      - otelcol
    logging: *default-logging

  influxdb:
    image: influxdb:2.7
    command:
      - /bin/sh
      - -c
      - |
        influx bucket create -n bucket -r 2d
    healthcheck:
      test: "curl -f http://localhost:8086/ping || exit 1"
      interval: 5s
      timeout: 10s
      retries: 5
    ports:
      - "8086:8086"
