receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317

  fluentforward:
    endpoint: 0.0.0.0:8006

  prometheus:
    config:
      scrape_configs:
        - job_name: 'app-a'
          scrape_interval: 5s
          static_configs:
            - targets: ['app-a:8000']
        - job_name: 'app-b'
          scrape_interval: 5s
          static_configs:
            - targets: ['app-b:8000']
        - job_name: 'app-c'
          scrape_interval: 5s
          static_configs:
            - targets: ['app-c:8000']

processors:
  resourcedetection:
    detectors: [system, docker]
    timeout: 2s
    override: false
    system:
      hostname_sources: ["os"]
  memory_limiter:
    check_interval: 5s
    limit_percentage: 40
    spike_limit_percentage: 25
  resource/loki:
    attributes:
      - action: insert
        key: host_name
        from_attribute: host.name
      - action: insert
        key: loki.resources.labels
        value: host_name
      - action: insert
        key: loki.format
        value: raw
  attributes/loki:
    actions:
      - action: insert
        key: loki.attribute.labels
        value: container_name
  batch:
    timeout: 5s
    send_batch_size: 100000

exporters:
  loki:
    endpoint: http://loki:3100/loki/api/v1/push
    default_labels_enabled:
      exporter: false
      job: true

  prometheusremotewrite:
    endpoint: "http://prometheus:9090/api/v1/push"
    resource_to_telemetry_conversion:
      enabled: true

  otlp:
    endpoint: tempo:4317
    tls:
      insecure: true

  file/traces:
    path: /output/traces.log
  file/logs:
    path: /output/logs.log
  file/metrics:
    path: /output/metrics.log

service:
  # telemetry:
    # logs:
      # level: debug
  pipelines:
    traces:
      receivers: [otlp]
      processors: [memory_limiter, resourcedetection, batch]
      exporters: [otlp, file/traces]
    metrics:
      receivers: [prometheus]
      processors: [memory_limiter, resourcedetection, batch]
      exporters: [prometheusremotewrite, file/metrics]
    logs:
      receivers: [fluentforward]
      processors: [memory_limiter, resourcedetection, resource/loki, attributes/loki, batch]
      exporters: [loki, file/logs]
